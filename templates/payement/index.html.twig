{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
{% endblock %}

{% block body %}
    {#---------------HEDAER-------------------#}
    {% block header %}
        {{ parent() }}
    {% endblock %}
    {#---------------MAPS-------------------#}
    <div id="wrapper">

        <div class="example-wrapper">
            <h1>Dernière étape avant d'avoir votre Bicko en main</h1>

            <div class="infos_villo">
                <h4>Emplacement: <span>{{ vars.name_villo }}</span></h4>
                <h4>Adresse: <span>{{ vars.address_villo }}</span></h4>
            </div>

            {% for message in app.flashes('success') %}
                <div class="alert-success">
                    {{ message }}
                </div>
            {% endfor %}

            <form id="payment-form" action="{{ path('payement') }}" method="post" enctype="multipart/form-data" novalidate>
                {{ form_row(payementForm.firstname_customer, {
                    attr: {placeholder: 'Prénom'} }) }}
                {{ form_row(payementForm.lastname_customer, {
                    attr: {placeholder: 'Nom'} }) }}
                {{ form_row(payementForm.email_customer, {
                    attr: {placeholder: 'Adresse mail'} }) }}

                <div class="form-row">
                    <div id="card-element">
                        <!-- A Stripe Element will be inserted here. -->
                    </div>
                    <!-- Used to display form errors. -->
                    <div id="card-errors" role="alert"></div>
                </div>

                <button type="submit" >PAYER</button>
            </form>
        </div>

        {#---------------FOOTER-------------------#}
        {% block footer %}
            {{ parent() }}
        {% endblock %}
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://js.stripe.com/v3/"></script>
    <script>
        // Create a Stripe client.
        var stripe = Stripe('pk_test_ENnbrDPFLY6HnjDP2othLSxy00RDgZbyzI');

        // Create an instance of Elements.
        var elements = stripe.elements();

        // Custom styling can be passed to options when creating an Element.
        // (Note that this demo uses a wider set of styles than the guide below.)
        var style = {
            base: {
                color: '#32325d',
                fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                fontSmoothing: 'antialiased',
                fontSize: '16px',
                '::placeholder': {
                    color: '#aab7c4'
                }
            },
            invalid: {
                color: '#fa755a',
                iconColor: '#fa755a'
            }
        };

        // Create an instance of the card Element.
        var card = elements.create('card', {hidePostalCode: true, style: style});

        // Add an instance of the card Element into the `card-element` <div>.
        card.mount('#card-element');

        // Handle real-time validation errors from the card Element.
        card.addEventListener('change', function(event) {
            var displayError = document.getElementById('card-errors');
            if (event.error) {
                displayError.textContent = event.error.message;
            } else {
                displayError.textContent = '';
            }
        });

        // Handle form submission.
        var form = document.getElementById('payment-form');
        form.addEventListener('submit', function(event) {
            event.preventDefault();

            stripe.createToken(card).then(function(result) {
                if (result.error) {
                    // Inform the user if there was an error.
                    var errorElement = document.getElementById('card-errors');
                    errorElement.textContent = result.error.message;
                } else {
                    // Send the token to your server.
                    stripeTokenHandler(result.token);
                }
            });
        });

        // Submit the form with the token ID.
        function stripeTokenHandler(token) {
            // Insert the token ID into the form so it gets submitted to the server
            var form = document.getElementById('payment-form');
            var hiddenInput = document.createElement('input');
            hiddenInput.setAttribute('type', 'hidden');
            hiddenInput.setAttribute('name', 'stripeToken');
            hiddenInput.setAttribute('value', token.id);
            form.appendChild(hiddenInput);

            // Submit the form
            form.submit();
        }
    </script>
{% endblock %}

